{"version":3,"sources":["pages/game/constants.js","pages/game/components/Header.js","pages/game/components/Weapon.js","pages/game/components/Weapons.js","pages/game/components/Mode.js","pages/game/components/Score.js","pages/game/components/Board.js","pages/game/actionTypes.js","pages/game/actions/fireWeapon.js","pages/game/selectors.js","pages/game/api/index.js","pages/game/api/serverFireWeaponRemote.js","pages/game/actions/resetAnswers.js","pages/game/api/serverConnectPlayer.js","pages/game/api/serverDisconnectPlayer.js","pages/game/actions/resetBoard.js","pages/game/actions/index.js","pages/game/actions/changeMode.js","pages/common/components/Header.js","pages/common/components/Logo.js","pages/common/constants.js","pages/common/components/Button.js","pages/common/components/InputText.js","pages/common/components/InputSelect.js","pages/login/components/Form.js","pages/login/selectors.js","pages/login/actionTypes.js","pages/login/constants.js","pages/register/components/Form.js","pages/register/actionTypes.js","pages/register/constants.js","pages/register/selectors.js","pages/register/actions/resetForm.js","pages/register/actions/index.js","pages/register/actions/onChangeField.js","pages/register/actions/registerUser.js","pages/register/actions/setErrors.js","pages/register/Container.js","pages/register/reducer.js","pages/register/index.js","pages/login/actions/resetForm.js","pages/login/actions/logout.js","pages/login/actions/index.js","pages/login/actions/onChangeField.js","pages/login/actions/login.js","pages/login/actions/setErrors.js","pages/login/Container.js","pages/login/reducer.js","pages/login/index.js","pages/game/Container.js","pages/game/reducer.js","pages/game/index.js","pages/main/reducer.js","configureStore.js","pages/main/constants.js","pages/main/components/NotFound.js","pages/main/components/Header.js","pages/main/components/GuessLayout.js","pages/main/components/GuessLayoutRoute.js","pages/main/components/MainLayout.js","pages/main/components/MainLayoutRoute.js","pages/main/Container.js","pages/main/index.js","index.js"],"names":["NAME","styles","container","css","backgroundColor","padding","fontSize","color","logout","cursor","marginRight","Header","_ref","onLogout","react_default","a","createElement","className","concat","onClick","weapon","margin","width","height","borderRadius","icon","iconQuestion","result","textAlign","border","fontWeight","hide","&>span","isWinner","disabled","opacity","Weapon","type","marginTop","bottom","text","Weapons","fireWeapon","textInfo","components_Weapon","title","button","Mode","changeMode","mode","hideButton","infoText","loading","label","points","Score","participant","Board","answerPlayer","answerComputer","scorePlayer","scoreComputer","answerPlayerTwo","playerNumber","scorePlayerTwo","winner","canPlayOnline","console","log","components_Mode","components_Score","FIRE_WEAPON","CHANGE_MODE","RESET_BOARD","RESET_ANSWERS","CONNECT_PLAYER_SUCCESS","UPDATE_PLAYERS_ONLINE","SEND_WINNER","FIRE_WEAPON_REMOTE_SUCCESS","SERVER_CONNECT_PLAYER","SERVER_DISCONNECT_PLAYER","SERVER_FIRE_WEAPON_REMOTE","weapons","winTable","rock","paper","scissors","getComputerChoice","Math","floor","random","length","getModel","state","getMode","createSelector","model","getAnswerPlayer","getAnswerComputer","getScorePlayer","getScoreComputer","getWaitingResponse","waitingResponse","getPlayerNumber","getIsRemote","isRemote","getAnswerPlayerTwo","getScorePlayerTwo","getWinner","getSocketId","socketId","getPlayersOnline","playersOnline","getCanPlayOnline","api","dispatch","getState","payload","resetBoard","actions","modeActual","header","logo","Logo","alt","src","Button","input","error","InputText","value","handleChange","placeholder","onChange","form","link","&:hover","Form","redirect","changeField","formValues","formErrors","registerUser","login","components_Logo","components_InputText","e","target","nickname","password","components_Button","getFormValues","getErrors","errors","getIsLogged","isLogged","CHANGE_FIELD","SET_ERRORS","LOGIN","LOGOUT","RESET_FORM","info","marginBottom","confirmPassword","REGISTER_USER","getUsers","users","resetForm","register_actions","field","obj","values","selectors","existUser","find","user","validateFields","Object","keys","push","setErrors","Container","_this$props","this","props","common_components_Header","register_components_Form","Component","mapStateToProps","createStructuredSelector","connect","url","INITIAL_STATE","register","reducer","arguments","undefined","action","update","defineProperty","$set","$push","pasword","actions_resetForm","login_actions","onChangeField","element","components_Form","pages_login","_this$props2","fireWeaponRemote","components_Header","components_Board","components_Weapons","game","$apply","move","main_reducer","history","_combineReducers","combineReducers","router","connectRouter","socket","io","socketIoMiddleware","createSocketIoMiddleware","createHistory","fontStyle","NotFound","LoginLayout","children","GuessLayoutRoute","component","rest","objectWithoutProperties","Route","assign","render","matchProps","GuessLayout","MainLayout","MainLayoutRoute","components_MainLayout","Router","Switch","components_GuessLayoutRoute","exact","path","components_MainLayoutRoute","main","withRouter","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","thunk","configureStore","ReactDOM","react_hot_loader","es","esm","document","getElementById"],"mappings":"8kBAAaA,EAAO,2DCcdC,EAAS,CACXC,UAAWC,cAAI,CACXC,gBAAiB,UACjBC,QAAS,GACTC,SAAU,GACVC,MAAO,SAEXC,OAAOL,cAAI,CACPG,SAAU,GACVG,OAAQ,UACRC,YAAa,UAINC,EAzBA,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,SACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,OAAAC,OAASjB,EAAOC,YAC1BY,EAAAC,EAAAC,cAAA,OAAKC,UAAS,sBAAd,wBAEIH,EAAAC,EAAAC,cAAA,OAAKG,QAASN,EAAUI,UAAWhB,EAAOO,QAA1C,oBCmBVP,EAAS,CACXmB,OAAQjB,cAAI,CACRkB,OAAQ,SACRjB,gBAAiB,OACjBkB,MAAO,IACPC,OAAQ,IACRC,aAAc,OACdf,OAAQ,YAEZgB,KAAMtB,cAAI,CACNI,MAAO,UACPD,SAAU,KAEdoB,aAAcvB,cAAI,CACdI,MAAO,OACPD,SAAU,KAEdqB,OAAQxB,cAAI,CACRkB,OAAQ,SACRC,MAAO,IACPC,OAAQ,IACRC,aAAc,IACdI,UAAW,SACXC,OAAQ,kBACRxB,QAAS,GACTyB,WAAY,MAEhBC,KAAM5B,cAAI,CACNC,gBAAiB,OACjByB,OAAQ,oBACRG,SAAU,CACNzB,MAAO,wBAGf0B,SAAU9B,cAAI,CACV0B,OAAQ,kBACRG,SAAU,CACNzB,MAAO,sBAGf2B,SAAU/B,cAAI,CACVgC,QAAS,MAqBFC,EArFA,SAAAxB,GAAiD,IAA9CyB,EAA8CzB,EAA9CyB,KAAMlB,EAAwCP,EAAxCO,QAASY,EAA+BnB,EAA/BmB,KAAME,EAAyBrB,EAAzBqB,SAAUC,EAAetB,EAAfsB,SAC7C,OACIpB,EAAAC,EAAAC,cAAA,WAESqB,EAMOvB,EAAAC,EAAAC,cAAA,UACIkB,SAAUA,EACVjB,UAAS,eAAAC,OAAiBf,cAAIF,EAAOmB,OAAQa,EAAWhC,EAAOgC,SAAW,GAAIC,EAAWjC,EAAOiC,SAAW,KAC3Gf,QAASA,GAEbL,EAAAC,EAAAC,cAAA,QAAMC,UAAS,eAAAC,OAAiBmB,EAAjB,KAAAnB,OAAyBjB,EAAOwB,SAV/CX,EAAAC,EAAAC,cAAA,OAAKC,UAAWd,cAAIF,EAAO0B,OAAQI,EAAO9B,EAAO8B,KAAO,KACpDjB,EAAAC,EAAAC,cAAA,QAAMC,UAAWd,cAAIF,EAAOwB,KAAMxB,EAAOyB,eACpC,QC0B3BzB,EAAS,CACXC,UAAWC,cAAI,CACXmC,UAAW,GACXlC,gBAAiB,UACjBC,QAAS,sBACTkC,OAAQ,MAEZC,KAAMrC,cAAI,CACNI,MAAO,OACP+B,UAAW,MAeJG,EAxDC,SAAA7B,GAAwC,IAArC8B,EAAqC9B,EAArC8B,WAAYR,EAAyBtB,EAAzBsB,SAAUS,EAAe/B,EAAf+B,SACrC,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,UAAS,6DAAAC,OAA+DjB,EAAOC,YAChFY,EAAAC,EAAAC,cAAA,OAAKC,UAAS,OACVH,EAAAC,EAAAC,cAAC4B,EAAD,CACIP,KAAK,OACLlB,QAAS,kBAAMuB,EAAW,SAC1BR,SAAUA,KAGlBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,OACVH,EAAAC,EAAAC,cAAC4B,EAAD,CACIP,KAAK,QACLlB,QAAS,kBAAMuB,EAAW,UAC1BR,SAAUA,KAGlBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,OACVH,EAAAC,EAAAC,cAAC4B,EAAD,CACIP,KAAK,WACLlB,QAAS,kBAAMuB,EAAW,aAC1BR,SAAUA,KAGlBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,UAAAC,OAAYjB,EAAOuC,OAAjC,mBAGCG,ICXP1C,EAAS,CACXC,UAAWC,cAAI,CACXkB,OAAQ,KAEZwB,MAAO1C,cAAI,CACPG,SAAU,GACVC,MAAO,SAEXuC,OAAQ3C,cAAI,CACRqB,aAAc,EACdc,UAAW,MAkBJS,EA5CF,SAAAnC,GAAgD,IAA7CoC,EAA6CpC,EAA7CoC,WAAYC,EAAiCrC,EAAjCqC,KAAMC,EAA2BtC,EAA3BsC,WAAYC,EAAevC,EAAfuC,SAC1C,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,OAAAC,OAASjB,EAAOC,YAC1BY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,EAAO4C,OJLH,IIMfI,EAAgC,qBAAuB,oBAGxDC,EAAa,GAAKpC,EAAAC,EAAAC,cAAA,UAAQC,UAAWhB,EAAO6C,OAAQ3B,QAAS6B,GAA3C,eAErBG,KCmBXlD,EAAS,CACXmD,QAASjD,cAAI,CACTG,SAAU,GACVC,MAAO,OACPqB,UAAW,WAEf1B,UAAWC,cAAI,CACXkB,OAAQ,sBAEZgC,MAAOlD,cAAI,CACPG,SAAU,GACVC,MAAO,SAEX+C,OAAQnD,cAAI,CACRyB,UAAW,SACXP,OAAQ,SACRC,MAAO,GACPhB,SAAU,GACVuB,OAAQ,iBACRtB,MAAO,OACPF,QAAS,EACTmB,aAAc,KAqBP+B,EAvED,SAAA3C,GAAmD,IAAhD4C,EAAgD5C,EAAhD4C,YAAaF,EAAmC1C,EAAnC0C,OAAQjB,EAA2BzB,EAA3ByB,KAAMN,EAAqBnB,EAArBmB,KAAME,EAAerB,EAAfqB,SAC9C,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,0BAAAC,OAA4BjB,EAAOC,YAC7CY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,EAAOoD,OAClBG,IAGT1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEPc,EACMjB,EAAAC,EAAAC,cAAC4B,EAAD,CACEb,MAAI,IAENjB,EAAAC,EAAAC,cAAC4B,EAAD,CACEP,KAAMA,EACNJ,SAAUA,KAI1BnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,EAAOqD,QAClBA,EADL,UCoDVrD,EAAS,CACX4C,MAAO1C,cAAI,CACPI,MAAO,OACPD,SAAU,GACVsB,UAAW,YAuCJ6B,EAjHD,SAAA7C,GAYR,IAXFqC,EAWErC,EAXFqC,KACAS,EAUE9C,EAVF8C,aACAC,EASE/C,EATF+C,eACAC,EAQEhD,EARFgD,YACAC,EAOEjD,EAPFiD,cACAb,EAMEpC,EANFoC,WACAc,EAKElD,EALFkD,gBACAC,EAIEnD,EAJFmD,aACAC,EAGEpD,EAHFoD,eACAC,EAEErD,EAFFqD,OACAC,EACEtD,EADFsD,cAGA,OADAC,QAAQC,IAAIF,GAERpD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqD,EAAD,CACIpB,KAAMA,EACND,WAAYA,EACZE,YAAagB,EACbf,SAA2B,GAAjBe,EAAyB,gKAA4J,KNvB7K,GM0BlBjB,EACMnC,EAAAC,EAAAC,cAACsD,EAAD,CACEd,YAAa,SACbnB,KAAsB,GAAhB0B,EAAoBL,EAAeI,EACzCR,OAAwB,GAAhBS,EAAoBH,EAAcI,EAC1CjC,KACqB,GAAhBgC,GAAqBL,IAAiBI,GACnB,GAAhBC,GAAqBD,IAAoBJ,EAEjDzB,SACqB,GAAhB8B,GAA+B,aAAVE,GACF,GAAhBF,GAA+B,aAAVE,IAG/BnD,EAAAC,EAAAC,cAACsD,EAAD,CACEd,YAAY,WACZnB,KAAMsB,EACNL,OAAQO,IAGpB/C,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,EAAO4C,OAAvB,MN9CsB,GMmDlBI,EACMnC,EAAAC,EAAAC,cAACsD,EAAD,CACEd,YAAa,MACbnB,KAAsB,GAAhB0B,EAAoBL,EAAeI,EACzCR,OAAwB,GAAhBS,EAAoBH,EAAcI,EAC1C/B,SACqB,GAAhB8B,GAA+B,aAAVE,GACF,GAAhBF,GAA+B,aAAVE,IAG/BnD,EAAAC,EAAAC,cAACsD,EAAD,CACEd,YAAa,SACbnB,KAAMqB,EACNJ,OAAQM,MCnEnBW,EAAW,GAAArD,OAAMlB,EAAN,gBACXwE,EAAW,GAAAtD,OAAMlB,EAAN,gBACXyE,EAAW,GAAAvD,OAAMlB,EAAN,gBACX0E,EAAa,GAAAxD,OAAMlB,EAAN,kBAEb2E,EAAsB,GAAAzD,OAAMlB,EAAN,2BAEtB4E,GADyB,GAAA1D,OAAMlB,EAAN,8BACJ,GAAAkB,OAAMlB,EAAN,2BACrB6E,EAAW,GAAA3D,OAAMlB,EAAN,gBACX8E,EAA0B,GAAA5D,OAAMlB,EAAN,+BAE1B+E,EAAqB,UAAA7D,OAAalB,EAAb,0BACrBgF,EAAwB,UAAA9D,OAAalB,EAAb,6BACxBiF,EAAyB,UAAA/D,OAAalB,EAAb,8BCbhCkF,EAAU,CAAC,OAAQ,QAAS,YAG5BC,EAAW,CACbC,KAAQ,CAAEA,KAAQ,EAAGC,OAAU,EAAGC,SAAY,GAC9CD,MAAS,CAAED,KAAQ,EAAGC,MAAS,EAAGC,UAAa,GAC/CA,SAAY,CAAEF,MAAS,EAAGC,MAAS,EAAGC,SAAY,IAwBhDC,EAAoB,WACtB,OAAOL,EAAQM,KAAKC,MAAMD,KAAKE,SAAWR,EAAQS,UC7BzCC,EAAW,SAACC,GACrB,OAAOA,EAAK,MAGHC,EAAUC,YACnBH,EACA,SAACI,GAAD,OAAWA,EAAM/C,OAGRgD,EAAkBF,YAC3BH,EACA,SAACI,GAAD,OAAWA,EAAMtC,eAGRwC,EAAoBH,YAC7BH,EACA,SAACI,GAAD,OAAWA,EAAMrC,iBAGRwC,EAAiBJ,YAC1BH,EACA,SAACI,GAAD,OAAWA,EAAMpC,cAGRwC,GAAmBL,YAC5BH,EACA,SAACI,GAAD,OAAWA,EAAMnC,gBAGRwC,GAAqBN,YAC9BH,EACA,SAACI,GAAD,OAAWA,EAAMM,kBAGRC,GAAkBR,YAC3BH,EACA,SAACI,GAAD,OAAWA,EAAMjC,eAGRyC,GAAcT,YACvBH,EACA,SAACI,GAAD,OAAWA,EAAMS,WAGRC,GAAqBX,YAC9BH,EACA,SAACI,GAAD,OAAWA,EAAMlC,kBAGR6C,GAAoBZ,YAC7BH,EACA,SAACI,GAAD,OAAWA,EAAMhC,iBAGR4C,GAAYb,YACrBH,EACA,SAACI,GAAD,OAAWA,EAAM/B,SAGR4C,GAAcd,YACvBH,EACA,SAACI,GAAD,OAAWA,EAAMc,WAGRC,GAAmBhB,YAC5BH,EACA,SAACI,GAAD,OAAWA,EAAMgB,gBAGRC,GAAmBlB,YAC5BD,EACAiB,GACAR,GACA,SAACtD,EAAM+D,EAAejD,GAClB,OT1E4B,GS0EpBd,GACD+D,EAAgB,GT1EG,GS2ElB/D,IACgB,GAAhBc,GAAqC,GAAhBA,GAAqC,MAAhBA,KC7E3CmD,GCCA,SAAU7E,GAErB,OAAO,SAAC8E,EAAUC,GAEd,IAAMvB,EAAQuB,IACR1D,EAAeuC,EAAgBJ,GAC/B/B,EAAkB4C,GAAmBb,GAEvCnC,GAAgBI,GAChBqD,ECVD,CACH9E,KAAMqC,EACN2C,QAAS,ODWTF,EAAS,CACL9E,KAAM4C,EACNoC,QAAShF,MDfN6E,GGDA,WACX,MAAO,CACH7E,KAAM0C,IHDCmC,GIDA,SAAUnD,EAAc+C,GACnC,OAAO,SAACK,GACJ,OAAOA,EAAS,CACZ9E,KAAM2C,EACNqC,QAAS,CACLtD,aAAcA,EACd+C,SAAUA,OCNXQ,GAAA,WACX,MAAO,CACHjF,KAAMoC,EACN4C,QAAS,OCFFE,GRQA,SAAUlF,GAErB,IAAIsB,EAAiB4B,IAEjBtB,EAA4C,IAAnCkB,EAASxB,GAAgBtB,GAChC,MACmC,IAAnC8C,EAASxB,GAAgBtB,GACrB,WAAa,SAEvB,MAAO,CACHA,KAAMkC,EACN8C,QAAS,CACL1D,eAAgBA,EAChBD,aAAcrB,EACd4B,OAAQA,KQtBLsD,GCGA,WACX,OAAO,SAACJ,EAAUC,GAEd,IAAMvB,EAAQuB,IACRI,EAAa1B,EAAQD,GACrBiB,EAAWD,GAAYhB,GACvB9B,EAAewC,GAAgBV,GAErCsB,EAASG,MACTH,EAAS,CACL9E,KAAMmC,EACN6C,QAAS,KAITF,EjBlBwB,GiBiBxBK,EACSN,KAEAA,GAA2BnD,EAAc+C,cCbxD7G,GAAS,CACXwH,OAAQtH,cAAI,CACRG,SAAU,GACVC,MAAO,OACPc,OAAQ,MAIDV,GAhBA,WACX,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,GAAOwH,QAAvB,6BCKFxH,GAAS,CACXyH,KAAOvH,cAAI,CACPmB,MAAO,IACPC,OAAQ,IACRC,aAAc,OAIPmG,GAdF,WACT,OACI7G,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,GAAOyH,KAAME,IAAI,GAAGC,ICNpB,gMCclB5H,GAAS,CACX6C,OAAS3C,cAAI,CACTmB,MAAO,OACPgB,UAAW,GACXjC,QAAS,EACTC,SAAU,GACVF,gBAAiB,UACjBG,MAAO,OACPsB,OAAQ,UAIDiG,GAvBA,SAAAlH,GAAqB,IAAnB4B,EAAmB5B,EAAnB4B,KAAMrB,EAAaP,EAAbO,QACnB,OACIL,EAAAC,EAAAC,cAAA,UACIqB,KAAK,SACLpB,UAAWhB,GAAO6C,OAClB3B,QAASA,GACPqB,ICSRvC,ICFME,cAAI,CACRmB,MAAO,OACPlB,gBAAiB,OACjBmB,OAAQ,GACRjB,SAAU,GACVkB,aAAc,EACdH,OAAQ,sBDJD,CACPnB,UAAYC,cAAI,CACZyB,UAAW,SAEfmG,MAAQ5H,cAAI,CACRmB,MAAO,OACPlB,gBAAiB,OACjBmB,OAAQ,GACRjB,SAAU,GACVkB,aAAc,EACdnB,QAAS,EACTiC,UAAY,KAEhB0F,MAAO7H,cAAI,CACPI,MAAO,cAIJ0H,GAjCG,SAAArH,GAAuD,IAApDsH,EAAoDtH,EAApDsH,MAAOC,EAA6CvH,EAA7CuH,aAAcC,EAA+BxH,EAA/BwH,YAAa/F,EAAkBzB,EAAlByB,KAAM2F,EAAYpH,EAAZoH,MACzD,OACIlH,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,GAAOC,WACnBY,EAAAC,EAAAC,cAAA,SACIC,UAAWhB,GAAO8H,MAClB1F,KAAMA,EACN6F,MAAOA,EACPG,SAAUF,EACVC,YAAaA,IAEjBtH,EAAAC,EAAAC,cAAA,QAAMC,UAAWhB,GAAO+H,OAAQA,GAASA,KEoC/C/H,GAAS,CACXqI,KAAMnI,cAAI,CACNC,gBAAiB,UACjBkC,UAAW,GACXjC,QAAS,KAEbgD,MAAOlD,cAAI,CACPkB,OAAQ,KAEZkH,KAAMpI,cAAI,CACNqI,UAAY,CACRjI,MAAO,OACPE,OAAQ,cAKLgI,GA9DF,SAAA7H,GAA0E,IAAxE8H,EAAwE9H,EAAxE8H,SAAUC,EAA8D/H,EAA9D+H,YAAaC,EAAiDhI,EAAjDgI,WAA0BC,GAAuBjI,EAArCkI,aAAqClI,EAAvBiI,YAAYE,EAAWnI,EAAXmI,MACxE,OACIjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKjB,GAAOqI,OACtBxH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACgI,GAAD,OAGJlI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACiI,GAAD,CACIb,YAAY,WACZD,aAAgB,SAACe,GAAD,OAAOP,EAAY,WAAYO,EAAEC,OAAOjB,QACxDA,MAASU,EAAWQ,SACpBpB,MAASa,EAAWO,YAG5BtI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACiI,GAAD,CACIb,YAAY,gBACZ/F,KAAM,WACN8F,aAAgB,SAACe,GAAD,OAAOP,EAAY,WAAYO,EAAEC,OAAOjB,QACxDA,MAASU,EAAWS,SACpBrB,MAASa,EAAWQ,YAG5BvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACsI,GAAD,CAAQ9G,KAAK,WAAWrB,QAAS4H,OAI7CjI,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,GAAOoD,OAAvB,QAGAvC,EAAAC,EAAAC,cAAA,OAAKC,WAAYhB,GAAOoD,MAAOpD,GAAOsI,MAAOpH,QAAS,kBAAMuH,EAAS,eAArE,8CCrCP9C,GAAW,SAACC,GACrB,OAAOA,EAAK,OAGH0D,GAAgBxD,YACzBH,GACA,SAACI,GAAD,OAAWA,EAAM4C,aAGRY,GAAYzD,YACrBH,GACA,SAACI,GAAD,OAAWA,EAAMyD,SAGRC,GAAc3D,YACvBH,GACA,SAACI,GAAD,OAAWA,EAAM2D,WCjBRC,GAAY,GAAA1I,OCFL,QDEK,iBACZ2I,GAAU,GAAA3I,OCHH,QDGG,eACV4I,GAAK,GAAA5I,OCJE,QDIF,UACL6I,GAAM,GAAA7I,OCLC,QDKD,WACN8I,GAAU,GAAA9I,OCNH,QDMG,eE+CjBjB,GAAS,CACXqI,KAAMnI,cAAI,CACNC,gBAAiB,UACjBkC,UAAW,GACXjC,QAAS,KAEbgD,MAAOlD,cAAI,CACPkB,OAAQ,KAEZkH,KAAMpI,cAAI,CACNmC,UAAW,GACXkG,UAAY,CACRjI,MAAO,OACPE,OAAQ,aAGhBwJ,KAAM9J,cAAI,CACNI,MAAO,OACPD,SAAU,GACV4J,aAAc,MAIPzB,GAxEF,SAAA7H,GAAmE,IAAjE8H,EAAiE9H,EAAjE8H,SAAUC,EAAuD/H,EAAvD+H,YAAaC,EAA0ChI,EAA1CgI,WAAYE,EAA8BlI,EAA9BkI,aAAcD,EAAgBjI,EAAhBiI,WAC5D,OACI/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKjB,GAAOqI,OACtBxH,EAAAC,EAAAC,cAAA,OAAKC,UAAWhB,GAAOgK,MAAvB,kHACAnJ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACiI,GAAD,CACIb,YAAY,WACZD,aAAgB,SAACe,GAAD,OAAOP,EAAY,WAAYO,EAAEC,OAAOjB,QACxDA,MAASU,EAAWQ,SACpBpB,MAASa,EAAWO,YAG5BtI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACiI,GAAD,CACIb,YAAY,gBACZ/F,KAAM,WACN8F,aAAgB,SAACe,GAAD,OAAOP,EAAY,WAAYO,EAAEC,OAAOjB,QACxDA,MAASU,EAAWS,SACpBrB,MAASa,EAAWQ,YAG5BvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACiI,GAAD,CACIb,YAAY,0BACZ/F,KAAM,WACN8F,aAAgB,SAACe,GAAD,OAAOP,EAAY,kBAAmBO,EAAEC,OAAOjB,QAC/DA,MAASU,EAAWuB,gBACpBnC,MAASa,EAAWsB,mBAG5BrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACsI,GAAD,CAAQ9G,KAAK,YAAYrB,QAAS2H,OAK9ChI,EAAAC,EAAAC,cAAA,OAAKC,WAAYhB,GAAOoD,MAAOpD,GAAOsI,MAAOpH,QAAS,kBAAMuH,EAAS,YAArE,yBC1CPkB,GAAY,GAAA1I,OCFL,WDEK,iBACZkJ,GAAa,GAAAlJ,OCHN,WDGM,kBACb2I,GAAU,GAAA3I,OCJH,WDIG,eACV8I,GAAU,GAAA9I,OCLH,WDKG,eEFV0E,GAAW,SAACC,GACrB,OAAOA,EAAK,UAGH0D,GAAgBxD,YACzBH,GACA,SAACI,GAAD,OAAWA,EAAM4C,aAGRyB,GAAWtE,YACpBH,GACA,SAACI,GAAD,OAAWA,EAAMsE,QAGRd,GAAYzD,YACrBH,GACA,SAACI,GAAD,OAAWA,EAAMyD,SCjBNc,GAAA,WACX,MAAO,CACHlI,KAAO2H,GACP3C,QAAS,OCDF,IAAAmD,GCFA,SAAUC,EAAOvC,GAC5B,MAAO,CACH7F,KAAOuH,GACPvC,QAAS,CACLoD,MAAOA,EACPvC,MAAOA,KDHJsC,GEEA,WACX,OAAO,SAACrD,EAAUC,GACd,IAsBesD,EAtBT7E,EAAQuB,IACRuD,EAASC,GAAwB/E,GAEjC4D,EAuBd,SAAwBkB,EAAQ9E,GAE5B,IAAM4D,EAAS,GAGXoB,EAFUD,GAAmB/E,GAEXiF,KAAK,SAACC,GACxB,OAAOA,EAAK3B,WAAauB,EAAOvB,WAqBpC,OAlBIuB,EAAOvB,SAEFyB,IACLpB,EAAOL,SAAP,cAAAlI,OAAgCyJ,EAAOvB,SAAvC,uCAFAK,EAAOL,SAAW,4BAKlBuB,EAAOtB,WACPI,EAAOJ,SAAW,kCAGlBsB,EAAOR,kBACPV,EAAOU,gBAAkB,6DAG1BQ,EAAOtB,WAAasB,EAAOR,kBAC1BV,EAAOU,gBAAkB,gFAGtBV,EAlDYuB,CAAeL,EAAQ9E,GAmBvB6E,EAlBGjB,EAmBa,IAA5BwB,OAAOC,KAAKR,GAAK/E,QAdpBwB,EAAS,CACL9E,KAAO+H,GACP/C,QAAS,CACL+B,SAAWuB,EAAOvB,SAAUC,SAAUsB,EAAOtB,YAIrDlC,EAASoD,MACTpD,EAASgE,aAAK,YAZVhE,ECXG,SAAUsC,GACrB,MAAO,CACHpH,KAAOwH,GACPxC,QAASoC,GDQI2B,CAAU3B,MEJzB4B,oLACQ,IAAAC,EAEkEC,KAAKC,MAArE9C,EAFF4C,EAEE5C,SAAUC,EAFZ2C,EAEY3C,YAAaC,EAFzB0C,EAEyB1C,WAAYC,EAFrCyC,EAEqCzC,WAAYC,EAFjDwC,EAEiDxC,aAEvD,OACIhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACyK,GAAD,MACA3K,EAAAC,EAAAC,cAAC0K,GAAD,CACIhD,SAAYA,EACZC,YAAeA,EACfC,WAAcA,EACdE,aAAgBA,EAChBD,WAAcA,aAdd8C,aAuBlBC,GAAkBC,YAAyB,CAC7CjD,WAAagC,GACb/B,WAAY+B,KAWDkB,eAAQF,GARI,SAACzE,GACxB,MAAO,CACJuB,SAAW,SAACqD,GAAD,OAAS5E,EAASgE,aAAKY,KAClCpD,YAAc,SAAC8B,EAAOvC,GAAR,OAAkBf,EAASI,GAAsBkD,EAAOvC,KACtEY,aAAe,kBAAM3B,EAASI,SAItBuE,CAA6CT,uBC1CtDW,GAAgB,CAClBpD,WAAa,CACTQ,SAAW,KACXC,SAAU,KACVc,gBAAkB,MAEtBV,OAAQ,CACJL,SAAW,KACXC,SAAU,KACVc,gBAAiB,MAErBG,MAAO,ICTI2B,GAAA,CACXjM,KTNgB,WSOhBqL,aACAa,QDSW,WAAyC,IAA/BrG,EAA+BsG,UAAAxG,OAAA,QAAAyG,IAAAD,UAAA,GAAAA,UAAA,GAAvBH,GAAeK,EAAQF,UAAAxG,OAAA,EAAAwG,UAAA,QAAAC,EACpD,OAAQC,EAAOhK,MAEX,KAAKuH,GACL,OAAO0C,KAAOzG,EAAO,CAAC+C,WAAUqC,OAAAsB,EAAA,EAAAtB,CAAA,GAAMoB,EAAOhF,QAAQoD,MAAS,CAAC+B,KAAOH,EAAOhF,QAAQa,UAErF,KAAK2B,GACL,OAAOyC,KAAOzG,EAAO,CAAC4D,OAAS,CAAE+C,KAAOH,EAAOhF,WAE/C,KAAK+C,GACL,OAAOkC,KAAOzG,EAAO,CAACyE,MAAQ,CAAEmC,MAAQ,CAACJ,EAAOhF,YAEhD,KAAK2C,GACL,OAAOsC,KAAOzG,EAAO,CACb4D,OAAS,CAAE+C,KAAO,CAACpD,SAAU,KAAMsD,QAAS,KAAMvC,gBAAgB,OAClEvB,WAAa,CAAE4D,KAAO,CAACpD,SAAU,KAAMsD,QAAS,KAAMvC,gBAAgB,SAI9E,QACI,OAAOtE,IC5Bf+E,aCPW+B,GAAA,WACX,MAAO,CACHtK,KAAO2H,GACP3C,QAAS,OCDF,ICAAuF,GAAA,CACXC,cCHW,SAAUpC,EAAOvC,GAC5B,MAAO,CACH7F,KAAOuH,GACPvC,QAAS,CACLoD,MAAOA,EACPvC,MAAOA,KDDfa,MECW,WACX,OAAO,SAAC5B,EAAUC,GACd,IAmBesD,EAnBT7E,EAAQuB,IACRuD,EAASC,GAAwB/E,GAEjC4D,EAoBd,SAAwBkB,EAAQ9E,GAE5B,IAAM4D,EAAS,GACTa,EAAQ2B,GAASrB,UAAUP,SAASxE,GAEtC8E,EAAOvB,WACPK,EAAOL,SAAW,6BAGlBuB,EAAOtB,WACPI,EAAOJ,SAAW,kCAGtB,IAAIyD,EAAUxC,EAAMQ,KAAK,SAACC,GACtB,OAAOA,EAAK3B,WAAauB,EAAOvB,WASpC,OANI0D,EAEKA,EAAQzD,WAAasB,EAAOtB,WACjCI,EAAOJ,SAAW,8CAFlBI,EAAOJ,SAAW,6CAKfI,EA3CYuB,CAAeL,EAAQ9E,GAgBvB6E,EAfGjB,EAgBa,IAA5BwB,OAAOC,KAAKR,GAAK/E,QAXpBwB,EAAS,CACL9E,KAAOyH,GACPzC,QAASsD,EAAOvB,WAEpBjC,EAASoD,MACTpD,EAASgE,aAAK,OATVhE,ECZG,SAAUsC,GACrB,MAAO,CACHpH,KAAOwH,GACPxC,QAASoC,GDSI2B,CAAU3B,MFP3BjJ,ODHW,SAAUiK,EAAOvC,GAC5B,OAAO,SAAAf,GACHA,EAAS,CACL9E,KAAO0H,KAEX5C,EAASoD,MACTpD,EAASgE,aAAK,cKDhBE,oLACQ,IAAAC,EAE2DC,KAAKC,MAA9D9C,EAFF4C,EAEE5C,SAAUC,EAFZ2C,EAEY3C,YAAaC,EAFzB0C,EAEyB1C,WAAYC,EAFrCyC,EAEqCzC,WAAYE,EAFjDuC,EAEiDvC,MAEvD,OACIjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACyK,GAAD,MACA3K,EAAAC,EAAAC,cAAC+L,GAAD,CACIrE,SAAYA,EACZC,YAAeA,EACfC,WAAcA,EACdC,WAAcA,EACdE,MAASA,aAdT4C,aAuBlBC,GAAkBC,YAAyB,CAC7CjD,WAAagC,GACb/B,WAAY+B,KAWDkB,eAAQF,GARI,SAACzE,GACxB,MAAO,CACJuB,SAAW,SAACqD,GAAD,OAAS5E,EAASgE,aAAKY,KAClCpD,YAAc,SAAC8B,EAAOvC,GAAR,OAAkBf,EAASI,GAAQsF,cAAcpC,EAAOvC,KACtEa,MAAQ,kBAAM5B,EAASI,GAAQwB,YAIvB+C,CAA6CT,IC1CtDW,GAAgB,CAClBrC,UAAW,EACXP,SAAW,KACXR,WAAa,CACTQ,SAAW,KACXC,SAAU,MAEdI,OAAS,CACLL,SAAW,KACXC,SAAU,OCNH2D,GAAA,CACXhN,KrBPgB,QqBQhBqL,aACAa,QDOW,WAAyC,IAA/BrG,EAA+BsG,UAAAxG,OAAA,QAAAyG,IAAAD,UAAA,GAAAA,UAAA,GAAvBH,GAAeK,EAAQF,UAAAxG,OAAA,EAAAwG,UAAA,QAAAC,EACpD,OAAQC,EAAOhK,MACX,KAAKuH,GACL,OAAO0C,KAAOzG,EAAO,CAAC+C,WAAUqC,OAAAsB,EAAA,EAAAtB,CAAA,GAAMoB,EAAOhF,QAAQoD,MAAS,CAAC+B,KAAOH,EAAOhF,QAAQa,UAErF,KAAK2B,GACL,OAAOyC,KAAOzG,EAAO,CAAC4D,OAAS,CAAE+C,KAAOH,EAAOhF,WAE/C,KAAKyC,GACL,OAAOwC,KAAOzG,EAAO,CAAC8D,SAAW,CAAE6C,MAAO,GAAOpD,SAAU,CAACoD,KAAOH,EAAOhF,WAE1E,KAAK0C,GACL,OAAOuC,KAAOzG,EAAO,CAAC8D,SAAW,CAAE6C,MAAO,GAAQpD,SAAU,CAACoD,KAAO,QAEpE,KAAKxC,GACL,OAAOsC,KAAOzG,EAAO,CACb4D,OAAS,CAAE+C,KAAO,CAACpD,SAAU,KAAMsD,QAAS,OAC5C9D,WAAa,CAAE4D,KAAO,CAACpD,SAAU,KAAMsD,QAAS,SAGxD,QACI,OAAO7G,IC3Bf0B,WACAqD,aCCES,+LAEiB,IAAAC,EACcC,KAAKC,MAA3B7B,EADQ2B,EACR3B,SAAUjB,EADF4C,EACE5C,SACbiB,GACAjB,EAAS,2CAIR,IAAAuE,EAoBD1B,KAAKC,MAjBLvI,EAHCgK,EAGDhK,KACAS,EAJCuJ,EAIDvJ,aACAC,EALCsJ,EAKDtJ,eACAC,EANCqJ,EAMDrJ,YACAC,EAPCoJ,EAODpJ,cACAnB,EARCuK,EAQDvK,WACAwK,EATCD,EASDC,iBACA5G,EAVC2G,EAUD3G,gBACAtD,EAXCiK,EAWDjK,WACAyD,EAZCwG,EAYDxG,SACA1C,EAbCkJ,EAaDlJ,aACAD,EAdCmJ,EAcDnJ,gBACAE,EAfCiJ,EAeDjJ,eACAC,EAhBCgJ,EAgBDhJ,OACAC,EAjBC+I,EAiBD/I,cACA8C,EAlBCiG,EAkBDjG,cACAxG,EAnBCyM,EAmBDzM,OAGJ,OAEIM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACmM,EAAD,CAAQtM,SAAUL,KAEtBM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAEPH,EAAAC,EAAAC,cAACoM,EAAD,CACInK,KAAMA,EACNS,aAAcA,EACdI,gBAAiBA,EACjBH,eAAgBA,EAChBC,YAAaA,EACbI,eAAgBA,EAChBH,cAAeA,EACfyC,gBAAiBA,EACjBtD,WAAYA,EACZyD,SAAUA,EACV1C,aAAcA,EACdE,OAAQA,EACRC,cAAeA,KAI3BpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAACqM,EAAD,CACI3K,WjDlEY,GiDkEAO,EAA+BP,EAAawK,EACxDhL,SjDlEU,GiDmENe,IACwB,GAAhBc,GAAqBL,IAAiBI,GAClB,GAAhBC,GAAqBD,IAAoBJ,GAC9CsD,EAAgB,GAG3BrE,SjDzEU,GiDyEAM,GAA8B+D,EAAgB,EAA9C,4EAA6H,cAlEvI2E,aA0ElBC,GAAkBC,YAAyB,CAC7C3H,cAAe0G,GACf3H,KAAM2H,EACNlH,aAAckH,EACd9G,gBAAiB8G,GACjBjH,eAAgBiH,EAChBhH,YAAagH,EACb5G,eAAgB4G,GAChB/G,cAAe+G,GACftE,gBAAiBsE,GACjB7G,aAAc6G,GACdnE,SAAUmE,GACV3G,OAAQ2G,GACR5D,cAAe4D,GACfjB,SAAWZ,GAAM6B,UAAUlB,cA+DhBoC,eAAQF,GA5DI,SAACzE,GACxB,MAAO,CACHzE,WAAY,SAACL,GAAD,OAAU8E,EAASI,GAAmBlF,KAClDW,WAAY,kBAAMmE,EAASI,OAC3B2F,iBAAkB,SAAC7K,GAAD,OAAU8E,EAASD,GAA2B7E,KAChEqG,SAAU,SAACqD,GAAD,OAAS5E,EAASgE,aAAKY,KACjCvL,OAAS,kBAAM2G,EAAS4B,GAAMxB,QAAQ/G,aAsD/BsL,CAA6CT,IC3JtDW,GAAgB,CAClBlF,SAAU,KACV7D,KlDNgC,EkDOhCc,aAAc,KACdL,aAAc,KACdI,gBAAiB,KACjBH,eAAgB,KAChBM,OAAQ,KACRL,YAAa,EACbI,eAAgB,EAChBH,cAAe,EACfmD,cAAe,GCfJsG,GAAA,CACXtN,OACAqL,aACAa,QDeW,WAAyC,IAA/BrG,EAA+BsG,UAAAxG,OAAA,QAAAyG,IAAAD,UAAA,GAAAA,UAAA,GAAvBH,GAAeK,EAAQF,UAAAxG,OAAA,EAAAwG,UAAA,QAAAC,EACpD,OAAQC,EAAOhK,MAEX,KAAKkC,EACD,OAAO+H,KAAOzG,EAAO,CACjBnC,aAAc,CAAE8I,KAAMH,EAAOhF,QAAQ3D,cACrCC,eAAgB,CAAE6I,KAAMH,EAAOhF,QAAQ1D,gBACvCE,cAAe,CAAE0J,OAAQ,SAACrF,GAAD,MAAqC,aAA1BmE,EAAOhF,QAAQpD,OAAwBiE,EAAQ,EAAIA,IACvFtE,YAAa,CAAE2J,OAAQ,SAACrF,GAAD,MAAqC,WAA1BmE,EAAOhF,QAAQpD,OAAsBiE,EAAQ,EAAIA,MAG3F,KAAK1D,EACD,OAAO8H,KAAOzG,EAAO,CACjB5C,KAAM,CAAEsK,OAAQ,SAACtK,GAAD,OlD/BI,GkD+BMA,ElD9BR,EADE,MkDkC5B,KAAKwB,EACD,OAAO6H,KAAOzG,EAAO,CACjBiB,SAAU,CAAE0F,KAAM,MAClBzI,aAAc,CAAEyI,KAAM,MACtB9I,aAAc,CAAE8I,KAAM,MACtB1I,gBAAiB,CAAE0I,KAAM,MACzB7I,eAAgB,CAAE6I,KAAM,MACxBvI,OAAQ,CAAEuI,KAAM,MAChB5I,YAAa,CAAE4I,KAAM,GACrBxI,eAAgB,CAAEwI,KAAM,GACxB3I,cAAe,CAAE2I,KAAM,KAG/B,KAAK9H,EAED,OAA0B,GAAtBmB,EAAM9B,cAA2C,GAAtB8B,EAAM9B,aAC1BuI,KAAOzG,EAAO,CACjBnC,aAAc,CAAE8I,KAAM,MACtB1I,gBAAiB,CAAE0I,KAAM,MACzB7I,eAAgB,CAAE6I,KAAM,MACxBvI,OAAQ,CAAEuI,KAAM,QAIjB3G,EAEX,KAAKlB,EACD,OAAO2H,KAAOzG,EAAO,CACjBiB,SAAU,CAAE0F,KAAMH,EAAOhF,QAAQP,UACjC/C,aAAc,CAAEyI,KAAMH,EAAOhF,QAAQtD,gBAG7C,KAAKa,EACD,OAAO0H,KAAOzG,EAAO,CACjBmB,cAAe,CAAEwF,KAAMH,EAAOhF,WAGtC,KAAKpC,EACD,OAA0B,GAAtBY,EAAM9B,cAA2C,GAAtB8B,EAAM9B,aAC1BuI,KAAOzG,EAAO,CACjBnC,aAAc,CAAE6J,OAAQ,SAACrF,GAAD,OAAiC,GAAtBrC,EAAM9B,aAAoBsI,EAAOhF,QAAUa,IAC9EpE,gBAAiB,CAAEyJ,OAAQ,SAACrF,GAAD,OAAiC,GAAtBrC,EAAM9B,aAAoBsI,EAAOhF,QAAUa,MAIlFrC,EAEX,KAAKf,EACD,OAA0B,GAAtBe,EAAM9B,cAA2C,GAAtB8B,EAAM9B,aAE1BuI,KAAOzG,EAAO,CACjBnC,aAAc,CAAE6J,OAAQ,SAACrF,GAAD,OAA0C,GAA/BmE,EAAOhF,QAAQtD,aAAoBsI,EAAOhF,QAAQmG,KAAOtF,IAC5FpE,gBAAiB,CAAEyJ,OAAQ,SAACrF,GAAD,OAA0C,GAA/BmE,EAAOhF,QAAQtD,aAAoBsI,EAAOhF,QAAQmG,KAAOtF,MAIhGrC,EAEX,KAAKhB,EACD,OAAOyH,KAAOzG,EAAO,CACjB5B,OAAQ,CAAEuI,KAAMH,EAAOhF,SACvBzD,YAAa,CAAE2J,OAAQ,SAACrF,GAAD,MAA6B,aAAlBmE,EAAOhF,QAAyBa,EAAQ,EAAIA,IAC9ElE,eAAgB,CAAEuJ,OAAQ,SAACrF,GAAD,MAA6B,aAAlBmE,EAAOhF,QAAyBa,EAAQ,EAAIA,MAGzF,QACI,OAAOrC,KElGJ4H,GAAA,SAACC,GAAY,IAAAC,EACxB,OAAOC,aAAeD,EAAA,CAClBE,OAAQC,YAAcJ,IADJzC,OAAAsB,EAAA,EAAAtB,CAAA0C,EAEjBL,GAAKtN,KAAOsN,GAAKpB,SAFAjB,OAAAsB,EAAA,EAAAtB,CAAA0C,EAGjB5E,GAAM/I,KAAO+I,GAAMmD,SAHFjB,OAAAsB,EAAA,EAAAtB,CAAA0C,EAIjB1B,GAASjM,KAAOiM,GAASC,SAJRyB,+DCEtBI,UAASC,GAAG,yBACZC,GAAqBC,KAAyBH,GAAQ,WAE7CL,GAAUS,OCZhB,4CCaDlO,GAAS,CACXuC,KAAMrC,cAAI,CACNG,SAAU,GACV8N,UAAW,SACX9L,UAAW,MAIJ+L,GAlBE,WACb,OACIvN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,OAAAC,OAASjB,GAAOuC,OAA9B,2DCQGrC,cAAI,CACXC,gBAAiB,UACjBC,QAAS,GACTC,SAAU,GACVC,MAAO,gBCDA+N,GAdK,SAAA1N,GAAkB,IAAf2N,EAAe3N,EAAf2N,SACnB,OACIzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVsN,KCOFC,GAVU,SAAA5N,GAAuC,IAAzB+K,EAAyB/K,EAApC6N,UAAyBC,EAAWzD,OAAA0D,GAAA,EAAA1D,CAAArK,EAAA,eAC5D,OACIE,EAAAC,EAAAC,cAAC4N,GAAA,EAAD3D,OAAA4D,OAAA,GAAWH,EAAX,CAAiBI,OAAQ,SAAAC,GAAU,OAC/BjO,EAAAC,EAAAC,cAACgO,GAAD,KACIlO,EAAAC,EAAAC,cAAC2K,EAAcoD,SCEhBE,GARI,SAAArO,GAAkB,IAAf2N,EAAe3N,EAAf2N,SAClB,OACIzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVsN,ICSEW,GAVS,SAAAtO,GAAuC,IAAzB+K,EAAyB/K,EAApC6N,UAAyBC,EAAWzD,OAAA0D,GAAA,EAAA1D,CAAArK,EAAA,eAC3D,OACIE,EAAAC,EAAAC,cAAC4N,GAAA,EAAD3D,OAAA4D,OAAA,GAAWH,EAAX,CAAiBI,OAAQ,SAAAC,GAAU,OAC/BjO,EAAAC,EAAAC,cAACmO,GAAD,KACIrO,EAAAC,EAAAC,cAAC2K,EAAcoD,SCCzB1D,oLAEO,IAEGqC,EAAYnC,KAAKC,MAAjBkC,QAER,OACI5M,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAQ1B,QAASA,GACb5M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAACsO,GAAD,CACIC,OAAK,EACLC,KAAK,SACLf,UAAW1F,GAAMsC,YAErBvK,EAAAC,EAAAC,cAACsO,GAAD,CACIC,OAAK,EACLC,KAAK,YACLf,UAAWxC,GAASZ,YAExBvK,EAAAC,EAAAC,cAACyO,GAAD,CACIF,OAAK,EACLC,KAAK,IACLf,UAAWnB,GAAKjC,YAEpBvK,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,CAAOH,UAAWJ,eAzBlB1C,aCNT+D,GAAA,CACX1P,KRJgB,OQKhBqL,UD0CWsE,aAAW7D,YAAQ,KAAM,KAAdA,CAAoBT,MEtCxCuE,WVKS,SAAwBC,GAErC,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAoBxE,OAlBcC,YACZC,GAAkBzC,IAClBmC,EACAC,EACEM,YACEC,YAAiB3C,IACjB4C,KACArC,MUhBMsC,IAEdC,IAAS1B,OACLhO,EAAAC,EAAAC,cAACyP,EAAA,aAAD,KACI3P,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAUd,MAAOA,IACb9O,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAiBjD,QAASA,IACtB5M,EAAAC,EAAAC,cAAC0O,GAAKrE,UAAN,SAIVuF,SAASC,eAAe","file":"static/js/main.4ca41596.chunk.js","sourcesContent":["export const NAME = 'game';\nexport const HAND_SCISSORS = 'scissors';\nexport const HAND_ROCK = 'rock';\nexport const HAND_PAPER = 'paper';\nexport const MODE_PLAYER_COMPUTER = 1;\nexport const MODE_PLAYER_PLAYER = 2;","import React from 'react';\nimport { css } from 'glamor';\n\nconst Header = ({onLogout}) => {\n    return (\n        <div className={`row ${styles.container}`}>\n            <div className={`col-12 text-center`}>\n                ROCK, PAPER, SCISSORS\n                <div onClick={onLogout} className={styles.logout}>Cerrar Sesion</div>\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    container: css({\n        backgroundColor: \"#112b46\",\n        padding: 15,\n        fontSize: 22,\n        color: \"#fff\"\n    }),\n    logout:css({\n        fontSize: 10,\n        cursor: \"pointer\",\n        marginRight: \"15px\",\n    })\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'glamor';\n\nconst Weapon = ({ type, onClick, hide, isWinner, disabled }) => {\n    return (\n        <div>\n            {\n                !type\n                    ?   <div className={css(styles.result, hide ? styles.hide : {})}>\n                            <span className={css(styles.icon, styles.iconQuestion)}>\n                                {\"?\"}\n                            </span>\n                        </div>\n                    :   <button\n                            disabled={disabled}\n                            className={`text-center ${css(styles.weapon, isWinner ? styles.isWinner : {}, disabled ? styles.disabled : {})}`} \n                            onClick={onClick}\n                        >\n                        <span className={`far fa-hand-${type} ${styles.icon}`} />\n                    </button>\n            }\n        </div>\n\n    );\n}\n\nconst styles = {\n    weapon: css({\n        margin: '0 auto',\n        backgroundColor: \"#fff\",\n        width: 100,\n        height: 100,\n        borderRadius: \"100%\",\n        cursor: 'pointer'\n    }),\n    icon: css({\n        color: \"#476b96\",\n        fontSize: 50\n    }),\n    iconQuestion: css({\n        color: \"#fff\",\n        fontSize: 35\n    }),\n    result: css({\n        margin: \"0 auto\",\n        width: 100,\n        height: 100,\n        borderRadius: 100,\n        textAlign: \"center\",\n        border: \"2px dashed #fff\",\n        padding: 20,\n        fontWeight: 300,\n    }),\n    hide: css({\n        backgroundColor: \"#fff\",\n        border: \"4px solid #476b96\",\n        '&>span': {\n            color: '#476b96 !important'\n        }\n    }),\n    isWinner: css({\n        border: \"4px solid green\",\n        '&>span': {\n            color: 'green !important'\n        }\n    }),\n    disabled: css({\n        opacity: .6\n    })\n}\n\nWeapon.propTypes = {\n    /** Tipo. */\n    type: PropTypes.number,\n\n    /** Evento click. */\n    onClick: PropTypes.func,\n\n    /** Bandera para ocultar. */\n    hide: PropTypes.bool,\n\n    /** Bandera para saber si es el ganador. */\n    isWinner: PropTypes.bool,\n\n    /** Bandera para desabilitar los botones. */\n    disabled: PropTypes.bool\n};\n\nexport default Weapon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'glamor';\nimport Weapon from './Weapon';\n\nconst Weapons = ({ fireWeapon, disabled, textInfo }) => {\n    return (\n        <div className={`row align-items-center justify-content-center text-center ${styles.container}`}>\n            <div className={`col`}>\n                <Weapon\n                    type='rock'\n                    onClick={() => fireWeapon('rock')}\n                    disabled={disabled}\n                />\n            </div>\n            <div className={`col`}>\n                <Weapon\n                    type='paper'\n                    onClick={() => fireWeapon('paper')}\n                    disabled={disabled}\n                />\n            </div>\n            <div className={`col`}>\n                <Weapon\n                    type='scissors'\n                    onClick={() => fireWeapon('scissors')}\n                    disabled={disabled}\n                />\n            </div>\n            <div className={`col-12 ${styles.text}`}>\n                CHOOSE A WEAPON\n            </div>\n            {textInfo}\n        </div>\n    );\n}\n\nconst styles = {\n    container: css({\n        marginTop: 50,\n        backgroundColor: \"#476b96\",\n        padding: \"20px 10px 20px 10px\",\n        bottom: \"0\"\n    }),\n    text: css({\n        color: \"#fff\",\n        marginTop: 20\n    })\n};\n\nWeapons.propTypes = {\n    /** Que disparo realizo. */\n    fireWeapon: PropTypes.string,\n\n    /** Bandera para saber si esta desactivado. */\n    disabled: PropTypes.bool,\n\n    /** Texto */\n    textInfo: PropTypes.string\n}\n\nexport default Weapons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MODE_PLAYER_COMPUTER } from '../constants';\nimport { css } from 'glamor';\n\nconst Mode = ({ changeMode, mode, hideButton, infoText }) => {\n    return (\n        <div className={`row ${styles.container}`}>\n            <div className=\"col text-center\">\n                <div className={styles.title}>\n                    {mode === MODE_PLAYER_COMPUTER ? 'PLAYER VS COMPUTER' : 'PLAYER VS PLAYER'}\n                </div>\n                {\n                    hideButton ? '' : <button className={styles.button} onClick={changeMode}>CHANGE MODE</button>\n                }\n                {infoText}\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    container: css({\n        margin: 30\n    }),\n    title: css({\n        fontSize: 15,\n        color: \"#fff\"\n    }),\n    button: css({\n        borderRadius: 5,\n        marginTop: 10\n    })\n}\n\nMode.propTypes = {\n    /** Función para cambiar el modo. */\n    changeMode: PropTypes.func,\n\n    /** Modo */\n    mode: PropTypes.number,\n\n    /** Ocultar el botón */\n    hideButton: PropTypes.func,\n\n    /** Texto */\n    infoText: PropTypes.string\n};\n\nexport default Mode;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'glamor';\nimport Weapon from './Weapon';\n\nconst Score = ({ participant, points, type, hide, isWinner }) => {\n    return (\n        <div className={`row align-items-center ${styles.container}`}>\n            <div className=\"col text-center\">\n                <div className={styles.label}>\n                    {participant}\n                </div>\n            </div>\n            <div className=\"col text-center\">\n                {\n                    hide\n                        ? <Weapon\n                            hide\n                        />\n                        : <Weapon\n                            type={type}\n                            isWinner={isWinner}\n                        />\n                }\n            </div>\n            <div className=\"col\">\n                <div className={styles.points}>\n                    {points} PT\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    loading: css({\n        fontSize: 24,\n        color: \"#fff\",\n        textAlign: 'center'\n    }),\n    container: css({\n        margin: \"30px 0px 30px 0px\"\n    }),\n    label: css({\n        fontSize: 15,\n        color: \"#fff\"\n    }),\n    points: css({\n        textAlign: \"center\",\n        margin: \"0 auto\",\n        width: 60,\n        fontSize: 15,\n        border: \"1px solid #fff\",\n        color: \"#fff\",\n        padding: 5,\n        borderRadius: 5\n    })\n};\n\nScore.propTypes = {\n    /** Participante */\n    participant: PropTypes.string,\n\n    /** Puntaje */\n    points: PropTypes.number,\n\n    /** Tipo */\n    type: PropTypes.string,\n\n    /** Si es oculto */\n    hide: PropTypes.bool,\n\n    /** Ganador */\n    isWinner: PropTypes.bool\n}\n\nexport default Score;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MODE_PLAYER_PLAYER } from '../constants';\nimport { css } from 'glamor';\nimport Mode from './Mode';\nimport Score from './Score';\n\n\nconst Board = ({\n    mode,\n    answerPlayer,\n    answerComputer,\n    scorePlayer,\n    scoreComputer,\n    changeMode,\n    answerPlayerTwo,\n    playerNumber,\n    scorePlayerTwo,\n    winner,\n    canPlayOnline\n}) => {\n    console.log(canPlayOnline);\n    return (\n        <div>\n            <Mode\n                mode={mode}\n                changeMode={changeMode}\n                hideButton={!canPlayOnline}\n                infoText={canPlayOnline == false ? \"En esta primera version solo es posible conectar a dos jugadores a la vez, puede intentar ganarle a la máquina mientras se libera una conexión. Gracias\" : \"\"}\n            />\n            {\n                mode == MODE_PLAYER_PLAYER\n                    ? <Score\n                        participant={'PLAYER'}\n                        type={playerNumber == 1 ? answerPlayer : answerPlayerTwo}\n                        points={playerNumber == 1 ? scorePlayer : scorePlayerTwo}\n                        hide={\n                            (playerNumber == 1 && answerPlayer && !answerPlayerTwo)\n                            || (playerNumber == 0 && answerPlayerTwo && !answerPlayer)\n                        }\n                        isWinner={\n                            (playerNumber == 1 && winner == 'playerOne')\n                            || (playerNumber == 0 && winner == 'playerTwo')\n                        }\n                    />\n                    : <Score\n                        participant=\"COMPUTER\"\n                        type={answerComputer}\n                        points={scoreComputer}\n                    />\n            }\n            <div className={styles.title}>\n                vs\n            </div>\n\n            {\n                mode == MODE_PLAYER_PLAYER\n                    ? <Score\n                        participant={'YOU'}\n                        type={playerNumber == 0 ? answerPlayer : answerPlayerTwo}\n                        points={playerNumber == 0 ? scorePlayer : scorePlayerTwo}\n                        isWinner={\n                            (playerNumber == 1 && winner == 'playerTwo')\n                            || (playerNumber == 0 && winner == 'playerOne')\n                        }\n                    />\n                    : <Score\n                        participant={'PLAYER'}\n                        type={answerPlayer}\n                        points={scorePlayer}\n                    />\n            }\n\n\n        </div>\n    );\n}\n\nconst styles = {\n    title: css({\n        color: \"#fff\",\n        fontSize: 18,\n        textAlign: 'center'\n    })\n}\n\nBoard.propTypes = {\n    /** Modo del jugador plaver vs plaver ó payer vs computer. */\n    mode: PropTypes.number,\n\n    /** Respuesta del jugador 1. */\n    answerPlayer: PropTypes.string,\n\n    /** Respuesta de la computadora. */\n    answerComputer: PropTypes.string,\n\n    /** Puntaje del jugador 1. */\n    scorePlayer: PropTypes.number,\n\n    /** Puntaje de la computadora. */\n    scoreComputer: PropTypes.number,\n\n    /** Función para cambiar el modo. */\n    changeMode: PropTypes.func,\n\n    /** Respuesta del jugador 2. */\n    answerPlayerTwo: PropTypes.string,\n\n    /** Que jugador es 1 o 2. */\n    playerNumber: PropTypes.string,\n\n    /** Puntaje del jugador 2. */\n    scorePlayerTwo: PropTypes.number,\n\n    /** Ganador. */\n    winner: PropTypes.string,\n\n    /** Bandera para identificar si es posible jugar online. */\n    canPlayOnline: PropTypes.bool\n};\n\nexport default Board;","import { NAME } from './constants';\n\nexport const FIRE_WEAPON = `${NAME}/FIRE_WEAPON`;\nexport const CHANGE_MODE = `${NAME}/CHANGE_MODE`;\nexport const RESET_BOARD = `${NAME}/RESET_BOARD`;\nexport const RESET_ANSWERS = `${NAME}/RESET_ANSWERS`;\n\nexport const CONNECT_PLAYER_SUCCESS = `${NAME}/CONNECT_PLAYER_SUCCESS`;\nexport const DISCONNECT_PLAYER_SUCCESS = `${NAME}/DISCONNECT_PLAYER_SUCCESS`;\nexport const UPDATE_PLAYERS_ONLINE = `${NAME}/UPDATE_PLAYERS_ONLINE`;\nexport const SEND_WINNER = `${NAME}/SEND_WINNER`;\nexport const FIRE_WEAPON_REMOTE_SUCCESS = `${NAME}/FIRE_WEAPON_REMOTE_SUCCESS`;\n\nexport const SERVER_CONNECT_PLAYER = `server/${NAME}/SERVER_CONNECT_PLAYER`;\nexport const SERVER_DISCONNECT_PLAYER = `server/${NAME}/SERVER_DISCONNECT_PLAYER`;\nexport const SERVER_FIRE_WEAPON_REMOTE = `server/${NAME}/SERVER_FIRE_WEAPON_REMOTE`;\n\n\n\n\n\n\n\n","import { FIRE_WEAPON } from '../actionTypes';\n/** Disparos */\nconst weapons = ['rock', 'paper', 'scissors'];\n\n/** Tabla para saber el ganador. */\nconst winTable = {\n    'rock': { 'rock': 0, 'paper': -1, 'scissors': 1 },\n    'paper': { 'rock': 1, 'paper': 0, 'scissors': -1 },\n    'scissors': { 'rock': -1, 'paper': 1, 'scissors': 0 }\n};\n\n/** Funcion para activar un arma. */\nexport default function (type) {\n\n    let answerComputer = getComputerChoice();\n\n    let winner = winTable[answerComputer][type] === 0\n        ? 'tie'\n        : winTable[answerComputer][type] === 1\n            ? 'computer' : 'player';\n\n    return {\n        type: FIRE_WEAPON,\n        payload: {\n            answerComputer: answerComputer,\n            answerPlayer: type,\n            winner: winner\n        }\n    }\n}\n\n/** Selecciona un elemento aleatorio. */\nconst getComputerChoice = () => {\n    return weapons[Math.floor(Math.random() * weapons.length)];\n}","import { NAME, MODE_PLAYER_COMPUTER } from './constants';\nimport { createSelector } from 'reselect';\nimport { MODE_PLAYER_PLAYER } from './constants';\n\nexport const getModel = (state) => {\n    return state[NAME];\n};\n\nexport const getMode = createSelector(\n    getModel,\n    (model) => model.mode\n);\n\nexport const getAnswerPlayer = createSelector(\n    getModel,\n    (model) => model.answerPlayer\n);\n\nexport const getAnswerComputer = createSelector(\n    getModel,\n    (model) => model.answerComputer\n);\n\nexport const getScorePlayer = createSelector(\n    getModel,\n    (model) => model.scorePlayer\n);\n\nexport const getScoreComputer = createSelector(\n    getModel,\n    (model) => model.scoreComputer\n);\n\nexport const getWaitingResponse = createSelector(\n    getModel,\n    (model) => model.waitingResponse\n);\n\nexport const getPlayerNumber = createSelector(\n    getModel,\n    (model) => model.playerNumber\n);\n\nexport const getIsRemote = createSelector(\n    getModel,\n    (model) => model.isRemote\n);\n\nexport const getAnswerPlayerTwo = createSelector(\n    getModel,\n    (model) => model.answerPlayerTwo\n);\n\nexport const getScorePlayerTwo = createSelector(\n    getModel,\n    (model) => model.scorePlayerTwo\n);\n\nexport const getWinner = createSelector(\n    getModel,\n    (model) => model.winner\n);\n\nexport const getSocketId = createSelector(\n    getModel,\n    (model) => model.socketId\n);\n\nexport const getPlayersOnline = createSelector(\n    getModel,\n    (model) => model.playersOnline\n);\n\nexport const getCanPlayOnline = createSelector(\n    getMode,\n    getPlayersOnline,\n    getPlayerNumber,\n    (mode, playersOnline, playerNumber) => {\n        return (mode == MODE_PLAYER_COMPUTER  \n            && playersOnline < 2) \n            || (mode == MODE_PLAYER_PLAYER) \n            && (playerNumber == 0 || playerNumber == 1 || playerNumber == null) \n\n    }\n);\n","import serverFireWeaponRemote from './serverFireWeaponRemote';\nimport serverConnectPlayer from './serverConnectPlayer';\nimport serverDisconnectPlayer from './serverDisconnectPlayer';\n\nexport default {\n    serverFireWeaponRemote,\n    serverConnectPlayer,\n    serverDisconnectPlayer\n};","import { SERVER_FIRE_WEAPON_REMOTE } from '../actionTypes';\nimport resetAnswers from '../actions/resetAnswers';\nimport { getAnswerPlayer, getAnswerPlayerTwo } from '../selectors';\n\n/** Funcion para activar un arma en el servidor. */\nexport default function (type) {\n\n    return (dispatch, getState) => {\n\n        const state = getState();\n        const answerPlayer = getAnswerPlayer(state);\n        const answerPlayerTwo = getAnswerPlayerTwo(state);\n\n        if (answerPlayer && answerPlayerTwo) {\n            dispatch(resetAnswers())\n        }\n\n        dispatch({\n            type: SERVER_FIRE_WEAPON_REMOTE,\n            payload: type\n        });\n    }\n\n}\n","import { RESET_ANSWERS } from '../actionTypes';\n\n/** Resetea las respuestas de los jugadores */\nexport default function () {\n    return {\n        type: RESET_ANSWERS,\n        payload: null\n    }\n};","import { SERVER_CONNECT_PLAYER } from '../actionTypes';\n\n/** Conectarse al servidor. */\nexport default function () {\n    return {\n        type: SERVER_CONNECT_PLAYER\n    }\n}\n","import { SERVER_DISCONNECT_PLAYER } from '../actionTypes';\n\n/** Desconectarse del servidor. */\nexport default function (playerNumber, socketId) {\n    return (dispatch) => {\n        return dispatch({\n            type: SERVER_DISCONNECT_PLAYER,\n            payload: {\n                playerNumber: playerNumber,\n                socketId: socketId\n            }\n        });\n    }\n}\n","import { RESET_BOARD } from '../actionTypes';\n\n/** Resetea todo el board */\nexport default function () {\n    return {\n        type: RESET_BOARD,\n        payload: null\n    }\n};","import fireWeapon from './fireWeapon';\nimport changeMode from './changeMode';\nimport resetBoard from './resetBoard';\n\nexport default {\n    fireWeapon,\n    changeMode,\n    resetBoard\n};","import { CHANGE_MODE } from '../actionTypes';\nimport { MODE_PLAYER_COMPUTER } from '../constants';\nimport api from '../api';\nimport resetBoard from './resetBoard';\nimport { getMode, getSocketId, getPlayerNumber } from '../selectors';\n\n// Cambiar el modo de player vs player ó player vs computer.\nexport default function () {\n    return (dispatch, getState) => {\n\n        const state = getState();\n        const modeActual = getMode(state);\n        const socketId = getSocketId(state);\n        const playerNumber = getPlayerNumber(state);\n\n        dispatch(resetBoard());\n        dispatch({\n            type: CHANGE_MODE,\n            payload: ''\n        });\n\n        if (modeActual == MODE_PLAYER_COMPUTER) {\n            dispatch(api.serverConnectPlayer());\n        } else {\n            dispatch(api.serverDisconnectPlayer(playerNumber, socketId));\n        }\n        \n    }\n};","import React from 'react';\nimport { css } from 'glamor';\n\nconst Header = () => {\n    return (\n        <div className={styles.header}>\n            ROCK-PAPER-SCISSORS GAME\n        </div>\n    );\n};\n\nconst styles = {\n    header: css({\n        fontSize: 30,\n        color: \"#fff\",\n        margin: 20\n    })\n};\n\nexport default Header;","import React from 'react';\nimport {css} from 'glamor';\nimport {LOGO_URL} from '../constants';\n\nconst Logo = () => {\n    return (\n        <img className={styles.logo} alt=\"\" src={LOGO_URL} />\n    );\n}\n\nconst styles = {\n    logo : css({\n        width: 100,\n        height: 100,\n        borderRadius: 100\n    })\n};\n\nexport default Logo;","export const LOGO_URL = 'https://scontent.fmid1-2.fna.fbcdn.net/v/t1.0-9/46202265_549816388815371_3132916786865897472_n.jpg?_nc_cat=107&_nc_ht=scontent.fmid1-2.fna&oh=10837af84030d5c638539a2de0f4edd3&oe=5D23E442';\n","import React from 'react';\nimport {css} from 'glamor';\n\nconst Button = ({text, onClick}) => {\n    return (\n        <button \n            type=\"button\" \n            className={styles.button} \n            onClick={onClick}>\n            { text }\n        </button>\n    )\n}\n\nconst styles = {\n    button : css({\n        width: \"100%\",\n        marginTop: 15,\n        padding: 8,\n        fontSize: 14,\n        backgroundColor: \"#112b46\",\n        color: \"#fff\",\n        border: \"none\"\n    })\n}\n\nexport default Button;","import React from 'react';\nimport { css } from 'glamor';\n\nconst InputText = ({ value, handleChange, placeholder, type, error }) => {\n    return (\n        <div className={styles.container}>\n            <input\n                className={styles.input}\n                type={type}\n                value={value}\n                onChange={handleChange}\n                placeholder={placeholder}\n            />\n            <span className={styles.error}>{error && error}</span>\n        </div>\n        );\n    }\n    \nconst styles = {\n        container : css({\n            textAlign: 'left'\n        }),\n        input : css({\n            width: \"100%\",\n            backgroundColor: \"#fff\",\n            height: 40,\n            fontSize: 14,\n            borderRadius: 0,\n            padding: 5,\n            marginTop : 15\n        }),\n        error: css({\n            color: '#ED2939'\n        })\n    }\n    \nexport default InputText;","import React from 'react';\nimport {css} from 'glamor';\n\nconst InputSelect = ({ options, handleChange, value }) => {\n    return (\n        <select className={styles.input} onChange={handleChange} value={value}>\n            {\n                options.map((option, index) => {\n                    return <option key={`option-select-${index}`} value={option.id}>{option.value}</option>;\n                })\n            }\n        </select>\n    );\n}\n\nconst styles = {\n    input : css({\n        width: \"100%\",\n        backgroundColor: \"#fff\",\n        height: 40,\n        fontSize: 14,\n        borderRadius: 0,\n        margin: \"20px 0px 20px 0px\"\n    })\n}\n\nexport default InputSelect;","import React from 'react';\nimport { css } from 'glamor';\nimport { InputText, Button, Logo} from '../../common/components';\n\nconst Form = ({redirect, changeField, formValues, registerUser, formErrors, login}) => {\n    return (\n        <div className=\"row justify-content-center\">\n            <div className=\"col-10 col-md-6\">\n                <div className={`${styles.form}`}>\n                    <form>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <Logo />\n                              \n                            </div>\n                            <div className=\"col-12\">\n                                <InputText \n                                    placeholder='Nickname' \n                                    handleChange = {(e) => changeField('nickname', e.target.value)}\n                                    value = {formValues.nickname}\n                                    error = {formErrors.nickname}\n                                />\n                            </div>\n                            <div className=\"col-12\">\n                                <InputText \n                                    placeholder='Contraseña' \n                                    type={'password'}\n                                    handleChange = {(e) => changeField('password', e.target.value)}\n                                    value = {formValues.password}\n                                    error = {formErrors.password}\n                                />\n                            </div>\n                            <div className=\"col-12\">\n                                <Button text=\"Ingresar\" onClick={login}/>\n                            </div>\n                        </div>\n                    </form>\n                    <div className={styles.label}>\n                        ó\n                    </div>\n                    <div className={(styles.label, styles.link)} onClick={() => redirect('/register')}> \n                        Registrate aquí para poder ingresar\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    form: css({\n        backgroundColor: '#476b96',\n        marginTop: 20,\n        padding: 20\n    }),\n    label: css({\n        margin: 10\n    }),\n    link: css({\n        '&:hover' : {\n            color: \"blue\",\n            cursor: \"pointer\"\n        }\n    })\n}\n\nexport default Form;","import { NAME } from './constants';\nimport { createSelector } from 'reselect';\n\nexport const getModel = (state) => {\n    return state[NAME];\n};\n\nexport const getFormValues = createSelector(\n    getModel,\n    (model) => model.formValues\n);\n\nexport const getErrors = createSelector(\n    getModel,\n    (model) => model.errors\n);\n\nexport const getIsLogged = createSelector(\n    getModel,\n    (model) => model.isLogged\n);","import {NAME} from './constants';\n\nexport const CHANGE_FIELD = `${NAME}/CHANGE_FIELD`;\nexport const SET_ERRORS = `${NAME}/SET_ERRORS`;\nexport const LOGIN = `${NAME}/LOGIN`;\nexport const LOGOUT = `${NAME}/LOGOUT`;\nexport const RESET_FORM = `${NAME}/RESET_FORM`;","export const NAME = 'login';","import React from 'react';\nimport { css } from 'glamor';\nimport { InputText, Button } from '../../common/components';\n\nconst Form = ({redirect, changeField, formValues, registerUser, formErrors}) => {\n    return (\n        <div className=\"row justify-content-center\">\n            <div className=\"col-10 col-md-6\">\n                <div className={`${styles.form}`}>\n                    <div className={styles.info}> Es necesario registrarse para poder jugar, elija un nickname y asigne una contraseña para poder ingresar. </div>\n                    <form>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <InputText \n                                    placeholder='Nickname'\n                                    handleChange = {(e) => changeField('nickname', e.target.value)}\n                                    value = {formValues.nickname}\n                                    error = {formErrors.nickname}\n                                />\n                            </div>\n                            <div className=\"col-12\">\n                                <InputText \n                                    placeholder='Contraseña'\n                                    type={'password'}\n                                    handleChange = {(e) => changeField('password', e.target.value)}\n                                    value = {formValues.password}\n                                    error = {formErrors.password}\n                                />\n                            </div>\n                            <div className=\"col-12\">\n                                <InputText \n                                    placeholder='Repita la contraseña' \n                                    type={'password'}\n                                    handleChange = {(e) => changeField('confirmPassword', e.target.value)}\n                                    value = {formValues.confirmPassword}\n                                    error = {formErrors.confirmPassword}\n                                />\n                            </div>\n                            <div className=\"col-12\">\n                                <Button text=\"Registrar\" onClick={registerUser}/>\n                            </div>\n                        </div>\n                    </form>\n\n                    <div className={(styles.label, styles.link)} onClick={() => redirect('/login')}> \n                        Regresar al login\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    form: css({\n        backgroundColor: '#476b96',\n        marginTop: 20,\n        padding: 20\n    }),\n    label: css({\n        margin: 10\n    }),\n    link: css({\n        marginTop: 20,\n        '&:hover' : {\n            color: \"blue\",\n            cursor: \"pointer\"\n        }\n    }),\n    info: css({\n        color: \"#fff\",\n        fontSize: 14,\n        marginBottom: 20,\n    })\n}\n\nexport default Form;","import {NAME} from './constants';\n\nexport const CHANGE_FIELD = `${NAME}/CHANGE_FIELD`;\nexport const REGISTER_USER = `${NAME}/REGISTER_USER`;\nexport const SET_ERRORS = `${NAME}/SET_ERRORS`;\nexport const RESET_FORM = `${NAME}/RESET_FORM`;","export const NAME = 'register';","import { NAME } from './constants';\nimport { createSelector } from 'reselect';\n\nexport const getModel = (state) => {\n    return state[NAME];\n};\n\nexport const getFormValues = createSelector(\n    getModel,\n    (model) => model.formValues\n);\n\nexport const getUsers = createSelector(\n    getModel,\n    (model) => model.users\n);\n\nexport const getErrors = createSelector(\n    getModel,\n    (model) => model.errors\n);","import { RESET_FORM } from '../actionTypes';\n\nexport default function () {\n    return {\n        type : RESET_FORM,\n        payload: null\n    }\n}","import onChangeField from './onChangeField';\nimport registerUser from './registerUser';\nimport resetForm from './resetForm';\n\nexport default {\n    onChangeField,\n    registerUser,\n    resetForm\n};","import { CHANGE_FIELD } from '../actionTypes';\n\nexport default function (field, value) {\n    return {\n        type : CHANGE_FIELD,\n        payload: {\n            field: field,\n            value: value\n        }\n    }\n}","import { REGISTER_USER } from '../actionTypes';\nimport setErrors from './setErrors';\nimport * as selectors from '../selectors';\nimport {push} from 'connected-react-router';\nimport resetForm from './resetForm';\n\nexport default function () {\n    return (dispatch, getState) => {\n        const state = getState();\n        const values = selectors.getFormValues(state);\n        \n        const errors = validateFields(values, state)\n        if(!isEmptyObject(errors)){\n            dispatch(setErrors(errors));\n            return;\n        }\n\n        dispatch({\n            type : REGISTER_USER,\n            payload: {\n                nickname : values.nickname, password: values.password\n            }\n        });\n\n        dispatch(resetForm());\n        dispatch(push('/login'));\n\n    }\n}\n\nfunction isEmptyObject(obj){\n    return Object.keys(obj).length === 0;\n}\n\nfunction validateFields(values, state){\n\n    const errors = {};\n    const users = selectors.getUsers(state);\n\n    let existUser = users.find((user) => {\n        return user.nickname === values.nickname;\n    })\n\n    if(!values.nickname){\n        errors.nickname = 'El nickname es requerido.';\n    }else if(existUser){\n        errors.nickname = `El usuario ${values.nickname} ha sido registrado anteriormente.`\n    }\n\n    if(!values.password){\n        errors.password = 'La contraseña es requerida.';\n    }\n\n    if(!values.confirmPassword){\n        errors.confirmPassword = 'Por favor escriba la confirmación de la contraseña.'\n    }\n\n    if(values.password !== values.confirmPassword){\n        errors.confirmPassword = 'La contraseña y la confirmación de la contraseña deben ser iguales.'\n    }\n\n    return errors;\n}","import { SET_ERRORS } from '../actionTypes';\n\nexport default function (errors) {\n    return {\n        type : SET_ERRORS,\n        payload: errors\n    }\n}","import React, { Component } from 'react';\nimport { Header } from '../common/components';\nimport { Form } from './components';\nimport { push } from 'connected-react-router';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport actions from './actions';\nimport * as selectors from './selectors';\n\nclass Container extends Component{\n    render () {\n\n        const { redirect, changeField, formValues, formErrors, registerUser } = this.props;\n\n        return (\n            <div className=\"row h-100 align-items-center justify-content-center text-center\">\n                <div className=\"col\">\n                    <Header />\n                    <Form \n                        redirect = {redirect}\n                        changeField = {changeField}\n                        formValues = {formValues}\n                        registerUser = {registerUser}\n                        formErrors = {formErrors}\n                    />\n                </div>\n            </div>\n        );\n    } \n}\n\n\nconst mapStateToProps = createStructuredSelector({\n    formValues : selectors.getFormValues,\n    formErrors: selectors.getErrors\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n       redirect : (url) => dispatch(push(url)),\n       changeField : (field, value) => dispatch(actions.onChangeField(field, value)),\n       registerUser : () => dispatch(actions.registerUser())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import update from 'immutability-helper';\nimport { CHANGE_FIELD, SET_ERRORS, REGISTER_USER, RESET_FORM } from './actionTypes';\n\nconst INITIAL_STATE = {\n    formValues : {\n        nickname : null,\n        password: null,\n        confirmPassword : null\n    },\n    errors: {\n        nickname : null,\n        password: null,\n        confirmPassword: null\n    },\n    users: []\n};\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n\n        case CHANGE_FIELD:\n        return update(state, {formValues : { [action.payload.field] : {$set : action.payload.value}}})\n\n        case SET_ERRORS:\n        return update(state, {errors : { $set : action.payload }})\n\n        case REGISTER_USER:\n        return update(state, {users : { $push : [action.payload]}});\n\n        case RESET_FORM:\n        return update(state, {\n                errors : { $set : {nickname: null, pasword: null, confirmPassword:null}},\n                formValues : { $set : {nickname: null, pasword: null, confirmPassword:null}},\n            });\n\n\n        default:\n            return state;\n    }\n}","import { NAME } from './constants';\nimport Container from './Container';\nimport reducer from './reducer';\nimport * as selectors from './selectors';\n\nexport default {\n    NAME,\n    Container,\n    reducer,\n    selectors\n};","import { RESET_FORM } from '../actionTypes';\n\nexport default function () {\n    return {\n        type : RESET_FORM,\n        payload: null\n    }\n}","import { LOGOUT } from '../actionTypes';\nimport {push} from 'connected-react-router';\nimport resetForm from './resetForm';\n\nexport default function (field, value) {\n    return dispatch => {\n        dispatch({\n            type : LOGOUT\n        });\n        dispatch(resetForm());\n        dispatch(push('/login'));\n        \n    }\n}","import onChangeField from './onChangeField';\nimport login from './login';\nimport logout from './logout';\n\nexport default {\n    onChangeField,\n    login,\n    logout\n};","import { CHANGE_FIELD } from '../actionTypes';\n\nexport default function (field, value) {\n    return {\n        type : CHANGE_FIELD,\n        payload: {\n            field: field,\n            value: value\n        }\n    }\n}","import { LOGIN } from '../actionTypes';\nimport setErrors from './setErrors';\nimport * as selectors from '../selectors';\nimport {push} from 'connected-react-router';\nimport register from '../../register';\nimport resetForm from './resetForm';\n\nexport default function () {\n    return (dispatch, getState) => {\n        const state = getState();\n        const values = selectors.getFormValues(state);\n        \n        const errors = validateFields(values, state)\n        if(!isEmptyObject(errors)){\n            dispatch(setErrors(errors));\n            return;\n        }\n\n        dispatch({\n            type : LOGIN,\n            payload: values.nickname\n        });\n        dispatch(resetForm());\n        dispatch(push('/'));\n\n    }\n}\n\nfunction isEmptyObject(obj){\n    return Object.keys(obj).length === 0;\n}\n\nfunction validateFields(values, state){\n\n    const errors = {};\n    const users = register.selectors.getUsers(state);\n\n    if(!values.nickname){\n        errors.nickname = 'El nickname es requerido.';\n    }\n\n    if(!values.password){\n        errors.password = 'La contraseña es requerida.';\n    }\n\n    let element = users.find((user) => {\n        return user.nickname === values.nickname;\n    });\n\n    if(!element){\n        errors.password = 'El usuario o contraseña no son validos.'\n    }else if(element.password !== values.password){\n        errors.password = 'El usuario o contraseña no son validos.';\n    }\n\n    return errors;\n}","import { SET_ERRORS } from '../actionTypes';\n\nexport default function (errors) {\n    return {\n        type : SET_ERRORS,\n        payload: errors\n    }\n}","import React, { Component } from 'react';\nimport { Header } from '../common/components';\nimport { Form } from './components';\nimport { push } from 'connected-react-router';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport * as selectors from './selectors';\nimport actions from './actions';\n\nclass Container extends Component{\n    render () {\n\n        const { redirect, changeField, formValues, formErrors, login } = this.props;\n\n        return (\n            <div className=\"row h-100 align-items-center justify-content-center text-center\">\n                <div className=\"col\">\n                    <Header />\n                    <Form \n                        redirect = {redirect}\n                        changeField = {changeField}\n                        formValues = {formValues}\n                        formErrors = {formErrors}\n                        login = {login}\n                    />\n                </div>\n            </div>\n        );\n    } \n}\n\n\nconst mapStateToProps = createStructuredSelector({\n    formValues : selectors.getFormValues,\n    formErrors: selectors.getErrors\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n       redirect : (url) => dispatch(push(url)),\n       changeField : (field, value) => dispatch(actions.onChangeField(field, value)),\n       login : () => dispatch(actions.login())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import update from 'immutability-helper';\nimport { CHANGE_FIELD, SET_ERRORS, LOGIN, LOGOUT, RESET_FORM } from './actionTypes';\n\nconst INITIAL_STATE = {\n    isLogged : false,\n    nickname : null,\n    formValues : {\n        nickname : null,\n        password: null\n    },\n    errors : {\n        nickname : null,\n        password: null\n    }\n};\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case CHANGE_FIELD:\n        return update(state, {formValues : { [action.payload.field] : {$set : action.payload.value}}})\n\n        case SET_ERRORS:\n        return update(state, {errors : { $set : action.payload }})\n\n        case LOGIN:\n        return update(state, {isLogged : { $set : true}, nickname: {$set : action.payload}});\n\n        case LOGOUT:\n        return update(state, {isLogged : { $set : false}, nickname: {$set : null}});\n\n        case RESET_FORM:\n        return update(state, {\n                errors : { $set : {nickname: null, pasword: null}},\n                formValues : { $set : {nickname: null, pasword: null}},\n            });\n\n        default:\n            return state;\n    }\n}","import { NAME } from './constants';\nimport Container from './Container';\nimport reducer from './reducer';\nimport actions from './actions';\nimport * as selectors from './selectors';\n\nexport default {\n    NAME,\n    Container,\n    reducer,\n    actions,\n    selectors\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { Header, Weapons, Board } from './components';\nimport actions from './actions';\nimport { MODE_PLAYER_COMPUTER, MODE_PLAYER_PLAYER } from './constants';\nimport {push} from 'connected-react-router';\nimport api from './api';\nimport * as selectors from './selectors';\nimport login from '../login';\n\nclass Container extends Component {\n\n    componentDidMount(){\n        const {isLogged, redirect} = this.props;\n        if(!isLogged){\n            redirect('/login');\n        }\n    }\n\n    render() {\n\n        const {\n            mode,\n            answerPlayer,\n            answerComputer,\n            scorePlayer,\n            scoreComputer,\n            fireWeapon,\n            fireWeaponRemote,\n            waitingResponse,\n            changeMode,\n            isRemote,\n            playerNumber,\n            answerPlayerTwo,\n            scorePlayerTwo,\n            winner,\n            canPlayOnline,\n            playersOnline,\n            logout\n        } = this.props;\n\n        return (\n\n            <div className=\"row h-100\">\n                <div className=\"col-12\" >\n                    <Header onLogout={logout}/>\n                </div>\n                <div className=\"col-12 align-content-center\">\n                    {\n                        <Board\n                            mode={mode}\n                            answerPlayer={answerPlayer}\n                            answerPlayerTwo={answerPlayerTwo}\n                            answerComputer={answerComputer}\n                            scorePlayer={scorePlayer}\n                            scorePlayerTwo={scorePlayerTwo}\n                            scoreComputer={scoreComputer}\n                            waitingResponse={waitingResponse}\n                            changeMode={changeMode}\n                            isRemote={isRemote}\n                            playerNumber={playerNumber}\n                            winner={winner}\n                            canPlayOnline={canPlayOnline}\n                        />\n                    }\n                </div>\n                <div className=\"col-12  align-content-end\">\n                    <Weapons\n                        fireWeapon={mode == MODE_PLAYER_COMPUTER ? fireWeapon : fireWeaponRemote}\n                        disabled={\n                            mode == MODE_PLAYER_PLAYER\n                                ? ((playerNumber == 0 && answerPlayer && !answerPlayerTwo)\n                                    || (playerNumber == 1 && answerPlayerTwo && !answerPlayer))\n                                || playersOnline < 2\n                                : false\n                        }\n                        textInfo={mode == MODE_PLAYER_PLAYER && playersOnline < 2 ? `Porfavor espere a que algún contrincante se conecte, para poder jugar.` : ''}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    canPlayOnline: selectors.getCanPlayOnline,\n    mode: selectors.getMode,\n    answerPlayer: selectors.getAnswerPlayer,\n    answerPlayerTwo: selectors.getAnswerPlayerTwo,\n    answerComputer: selectors.getAnswerComputer,\n    scorePlayer: selectors.getScorePlayer,\n    scorePlayerTwo: selectors.getScorePlayerTwo,\n    scoreComputer: selectors.getScoreComputer,\n    waitingResponse: selectors.getWaitingResponse,\n    playerNumber: selectors.getPlayerNumber,\n    isRemote: selectors.getIsRemote,\n    winner: selectors.getWinner,\n    playersOnline: selectors.getPlayersOnline,\n    isLogged : login.selectors.getIsLogged\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fireWeapon: (type) => dispatch(actions.fireWeapon(type)),\n        changeMode: () => dispatch(actions.changeMode()),\n        fireWeaponRemote: (type) => dispatch(api.serverFireWeaponRemote(type)),\n        redirect: (url) => dispatch(push(url)),\n        logout : () => dispatch(login.actions.logout())\n    };\n};\n\nContainer.propTypes = {\n    /** Modo plaver vs player ó plaver vs computer. */\n    mode: PropTypes.number,\n\n    /** Respuesta del jugador 1. */\n    answerPlayer: PropTypes.string,\n\n    /** Respuesta de la computadora. */\n    answerComputer: PropTypes.string,\n\n    /** Puntaje del jugador 1. */\n    scorePlayer: PropTypes.number,\n\n    /** Puntaje de la computadora. */\n    scoreComputer: PropTypes.number,\n\n    /** Disparo */\n    fireWeapon: PropTypes.string,\n\n    /** Disparo del jugador remoto */\n    fireWeaponRemote: PropTypes.string,\n\n    /** Bandera para indicar esperando respuesta. */\n    waitingResponse: PropTypes.bool,\n\n    /** Función para cambiar el modo. */\n    changeMode: PropTypes.func,\n\n    /** Bandera para saber si el jugador es remoto. */\n    isRemote: PropTypes.bool,\n\n    /** Jugador */\n    playerNumber: PropTypes.number,\n\n    /** Respuesta del Jugador 2 */\n    answerPlayerTwo: PropTypes.string,\n\n    /** Puntaje del jugador 2 */\n    scorePlayerTwo: PropTypes.number,\n\n    /** Ganador */\n    winner: PropTypes.string,\n\n    /** Bandera para saber si puede jugar online. */\n    canPlayOnline: PropTypes.bool,\n\n    /** Numero de jugadores en linea. */\n    playersOnline: PropTypes.number\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import { MODE_PLAYER_COMPUTER, MODE_PLAYER_PLAYER } from './constants';\nimport {\n    FIRE_WEAPON, SERVER_FIRE_WEAPON_REMOTE, CHANGE_MODE,\n    CONNECT_PLAYER_SUCCESS, FIRE_WEAPON_REMOTE_SUCCESS, SEND_WINNER, RESET_BOARD,\n    UPDATE_PLAYERS_ONLINE, RESET_ANSWERS\n} from './actionTypes';\nimport update from 'immutability-helper';\n\nconst INITIAL_STATE = {\n    socketId: null, // Identificador del socket.\n    mode: MODE_PLAYER_COMPUTER, // Modo\n    playerNumber: null, // Numero del jugador\n    answerPlayer: null, // Respuesta del jugador 1\n    answerPlayerTwo: null, // Respuesta del jugador 2\n    answerComputer: null, // Respeusta de la computadora\n    winner: null, // Ganador\n    scorePlayer: 0, // Puntaje del player 1\n    scorePlayerTwo: 0, // Puntaje del player 2\n    scoreComputer: 0, // Puntaje de la computadora\n    playersOnline: 0, // Número de jugadores online\n};\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n\n        case FIRE_WEAPON:\n            return update(state, {\n                answerPlayer: { $set: action.payload.answerPlayer },\n                answerComputer: { $set: action.payload.answerComputer },\n                scoreComputer: { $apply: (value) => action.payload.winner === 'computer' ? value + 1 : value },\n                scorePlayer: { $apply: (value) => action.payload.winner === 'player' ? value + 1 : value }\n            });\n\n        case CHANGE_MODE:\n            return update(state, {\n                mode: { $apply: (mode) => mode == MODE_PLAYER_COMPUTER ? MODE_PLAYER_PLAYER : MODE_PLAYER_COMPUTER }\n            });\n\n        case RESET_BOARD:\n            return update(state, {\n                socketId: { $set: null },\n                playerNumber: { $set: null },\n                answerPlayer: { $set: null },\n                answerPlayerTwo: { $set: null },\n                answerComputer: { $set: null },\n                winner: { $set: null },\n                scorePlayer: { $set: 0 },\n                scorePlayerTwo: { $set: 0 },\n                scoreComputer: { $set: 0 },\n            });\n\n        case RESET_ANSWERS:\n\n            if (state.playerNumber == 0 || state.playerNumber == 1) {\n                return update(state, {\n                    answerPlayer: { $set: null },\n                    answerPlayerTwo: { $set: null },\n                    answerComputer: { $set: null },\n                    winner: { $set: null },\n                });\n            }\n\n            return state;\n\n        case CONNECT_PLAYER_SUCCESS:\n            return update(state, {\n                socketId: { $set: action.payload.socketId },\n                playerNumber: { $set: action.payload.playerNumber },\n            });\n\n        case UPDATE_PLAYERS_ONLINE:\n            return update(state, {\n                playersOnline: { $set: action.payload },\n            });\n\n        case SERVER_FIRE_WEAPON_REMOTE:\n            if (state.playerNumber == 0 || state.playerNumber == 1) {\n                return update(state, {\n                    answerPlayer: { $apply: (value) => state.playerNumber == 0 ? action.payload : value },\n                    answerPlayerTwo: { $apply: (value) => state.playerNumber == 1 ? action.payload : value }\n                });\n            }\n\n            return state;\n\n        case FIRE_WEAPON_REMOTE_SUCCESS:\n            if (state.playerNumber == 0 || state.playerNumber == 1) {\n\n                return update(state, {\n                    answerPlayer: { $apply: (value) => action.payload.playerNumber == 0 ? action.payload.move : value },\n                    answerPlayerTwo: { $apply: (value) => action.payload.playerNumber == 1 ? action.payload.move : value }\n                });\n            }\n\n            return state;\n\n        case SEND_WINNER:\n            return update(state, {\n                winner: { $set: action.payload },\n                scorePlayer: { $apply: (value) => action.payload == 'playerOne' ? value + 1 : value },\n                scorePlayerTwo: { $apply: (value) => action.payload == 'playerTwo' ? value + 1 : value }\n            });\n\n        default:\n            return state;\n    }\n}","import { NAME } from './constants';\nimport Container from './Container';\nimport reducer from './reducer';\n\nexport default {\n    NAME,\n    Container,\n    reducer\n};","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport game from '../game';\nimport login from '../login';\nimport register from '../register';\n\nexport default (history) => {\n    return combineReducers({\n        router: connectRouter(history),\n        [game.NAME]: game.reducer,\n        [login.NAME]: login.reducer,\n        [register.NAME]: register.reducer\n    });\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './pages/main/reducer';\nimport createHistory from \"history/createBrowserHistory\";\nimport thunk from 'redux-thunk';\n\n/** Socket */\nimport createSocketIoMiddleware from 'redux-socket.io';\nimport io from 'socket.io-client';\nlet socket = io('http://localhost:8000');\nlet socketIoMiddleware = createSocketIoMiddleware(socket, \"server/\");\n\nexport const history = createHistory();\n\nexport default function configureStore(preloadedState) {\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancers(\n      applyMiddleware(\n        routerMiddleware(history),\n        thunk,\n        socketIoMiddleware\n      ),\n    ),\n  )\n\n  if (module.hot) {\n    module.hot.accept('./pages/main/reducer', () => {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return store;\n}","export const NAME = 'main';","import React from 'react';\nimport { css } from 'glamor';\n\nconst NotFound = () => {\n    return (\n        <div className=\"row text-center align-items-center h-100\">\n            <div className={`col ${styles.text}`}>\n                Lo sentimos la página que buscas no existe. :(\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    text: css({\n        fontSize: 23,\n        fontStyle: \"italic\",\n        marginTop: 50\n    })\n};\n\nexport default NotFound;","import React from 'react';\nimport { css } from 'glamor';\n\nconst Header = () => {\n    return (\n        <div className={`row ${styles.container}`}>\n            <div className={`col-12 text-center`}>\n                ROCK, PAPER, SCISSORS\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    container: css({\n        backgroundColor: \"#112b46\",\n        padding: 15,\n        fontSize: 15,\n        color: \"#fff\"\n    })\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoginLayout = ({ children }) => {\n    return (\n        <div className=\"row h-100 align-items-center justify-content-center\">\n            <div className=\"col-12 h-100\">\n                {children}\n            </div>\n        </div>\n    );\n}\n\nLoginLayout.propTypes = {\n    children : PropTypes.element\n}\n\nexport default LoginLayout;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport GuessLayout from './GuessLayout';\n\nconst GuessLayoutRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route {...rest} render={matchProps => (\n            <GuessLayout>\n                <Component {...matchProps} />\n            </GuessLayout>\n        )} />\n    )\n}\n\nexport default GuessLayoutRoute;","import React from 'react';\n\nconst MainLayout = ({ children }) => {\n    return (\n        <div className=\"container h-100\">\n            {children}\n        </div>\n    );\n}\n\nexport default MainLayout;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport MainLayout from './MainLayout';\n\nconst MainLayoutRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route {...rest} render={matchProps => (\n            <MainLayout>\n                <Component {...matchProps} />\n            </MainLayout>\n        )} />\n    )\n};\n\nexport default MainLayoutRoute;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { NotFound, GuessLayoutRoute, MainLayoutRoute } from './components';\nimport login from '../login';\nimport game from '../game';\nimport register from '../register';\n\nclass Container extends Component {\n\n    render() {\n\n        const { history } = this.props;\n\n        return (\n            <Router history={history}>\n                <div>\n                    <Switch>\n                        <GuessLayoutRoute\n                            exact\n                            path=\"/login\"\n                            component={login.Container}\n                        />\n                        <GuessLayoutRoute\n                            exact\n                            path=\"/register\"\n                            component={register.Container}\n                        />\n                        <MainLayoutRoute\n                            exact\n                            path=\"/\"\n                            component={game.Container}\n                        />\n                        <Route component={NotFound} />\n                    </Switch>\n                </div>\n            </Router>\n        );\n    };\n};\n\nContainer.propTypes = {\n    /** Historia del browser */\n    history: PropTypes.object\n}\n\nexport default withRouter(connect(null, null)(Container));\n\n\n","import { NAME } from './constants';\nimport Container from './Container';\n\nexport default {\n    NAME,\n    Container\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { AppContainer } from 'react-hot-loader'\nimport configureStore, { history } from './configureStore'\nimport main from './pages/main';\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <AppContainer>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <main.Container />\n            </ConnectedRouter>\n        </Provider>\n    </AppContainer>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}